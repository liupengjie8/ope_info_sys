<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.itmuch.cloud.authorities.dao.OpepermissionDao">
	<!-- 配置实体映射 -->
	<!-- 参数type 为实体类的全限定类名 -->
	<resultMap type="com.itmuch.cloud.authorities.entity.Opepermission" id="testResult">
		<result property="id" column="id" jdbcType="INTEGER" />
		<result property="name" column="name"  jdbcType="VARCHAR" />
		<result property="descript" column="descritpion"  jdbcType="VARCHAR" />
		<result property="url" column="url"  jdbcType="VARCHAR" />
		<result property="pid" column="pid"  jdbcType="INTEGER" />
		<result property="level" column="level"  jdbcType="INTEGER" />
	    <result property="pName" column="pname"  jdbcType="VARCHAR" />
	</resultMap>
	
<select id="findAll"   resultMap="testResult">

   SELECT 
          p.id,
          p.name,
          p.descritpion,
          p.url,
          p.pid,
          p.level,
         (CASE WHEN p.level!=0 THEN f.name ELSE '无' END) pname
         FROM 
         ope_permission p
         LEFT JOIN ope_permission f  ON p.pid=f.id
</select>

 <select id="findByAdminUserId" parameterType="java.lang.Integer"  resultMap="testResult">
SELECT  p.* FROM  ope_user u LEFT JOIN
           ope_user_role ur ON u.id=ur.user_id
          LEFT JOIN ope_role r ON ur.role_id=r.id
          LEFT  JOIN  ope_role_permission rp ON r.id=rp.role_id
          LEFT JOIN  ope_permission  p ON rp.permission_id=p.id
          WHERE 
          u.id=#{userId}
 </select>
 
  <insert  id="addNewPermission" parameterType="com.itmuch.cloud.authorities.entity.Opepermission">
  INSERT  INTO ope_permission (name,descritpion,url,pid,level) 
    VALUES(#{param.name},#{param.descript},#{param.url},#{param.pid},#{param.level})
  
  </insert>
 <update id="updatePermission"  parameterType="com.itmuch.cloud.authorities.entity.Opepermission">
 update ope_permission
 set 
 name=#{param.name},
 descritpion=#{param.descript},
 url=#{param.url},
 pid=#{param.pid},
 level=#{param.level}
 where 
 id=#{param.id}
 </update>
 
 <select id="findPermissionById"   resultMap="testResult" parameterType="java.lang.Integer" >

   SELECT 
          p.id,
          p.name,
          p.descritpion,
          p.url,
          p.pid,
          p.level,
         (CASE WHEN p.level!=0 THEN f.name ELSE '无' END) pname
         FROM 
         ope_permission p
         LEFT JOIN ope_permission f  ON p.pid=f.id
          where p.id=#{pid}
</select>
 
  <select id="findPermissionBylevel"   resultMap="testResult" parameterType="java.lang.Integer" >

   SELECT 
          p.id,
          p.name,
          p.descritpion,
          p.url,
          p.pid,
          p.level,
         (CASE WHEN p.level!=0 THEN f.name ELSE '无' END) pname
         FROM 
         ope_permission p
         LEFT JOIN ope_permission f  ON p.pid=f.id
          where p.level=#{level}
</select>
 
 
 <select id="findAllByPermission"   resultMap="testResult">

  
         SELECT 
          p.id,
          p.name,
          p.descritpion,
          p.url,
          p.pid,
          p.level,
         (CASE WHEN p.level!=0 THEN f.name ELSE '无' END) pname
         FROM 
         ope_permission p
         LEFT JOIN ope_permission f  ON p.pid=f.id
   where
   1=1
   <if test="param.name!=null and param.name!=''">
   and  p.name like #{param.name}
   </if>
      ORDER BY  p.id  DESC  
	   LIMIT #{param.page},#{param.size}
</select>
 
 
 <delete id="deletePermissionById" parameterType="java.lang.Integer">
 delete  from ope_permission where id=#{pid} 
 
 </delete>
	
	<select id="getPermissionTotal" resultType="java.lang.Integer"  parameterType="com.itmuch.cloud.authorities.entity.Opepermission">
	
	select count(1) from   ope_permission 
	where
	1=1
	<if test="param.name!=null and param.name!=''">
   and  name like #{param.name}
   </if>
	
	</select>
	<select id="findChildPermission"   resultMap="testResult" parameterType="java.lang.Integer" >

   SELECT 
          p.id,
          p.name,
          p.descritpion,
          p.url,
          p.pid,
          p.level,
         (CASE WHEN p.level!=0 THEN f.name ELSE '无' END) pname
         FROM 
         ope_permission p
         LEFT JOIN ope_permission f  ON p.pid=f.id
          where p.level=#{level}
          and  p.pid=#{pid}
</select>
  <select id="getPermissionAndRole"  resultMap="testResult" parameterType="java.lang.Integer">
   SELECT 
          p.id,
          p.name,
          p.descritpion,
          p.url,
          p.pid,
          p.level,
         (CASE WHEN p.level!=0 THEN f.name ELSE '无' END) pname
         FROM 
         ope_role_permission rp
         LEFT JOIN
         ope_permission p
         ON rp.`permission_id`=p.`id`
         LEFT JOIN ope_permission f  ON p.pid=f.id
       
          WHERE 
          rp.`permission_id`=#{pid}
          AND rp.`role_id`=#{rid}
  
  </select>
  
<select id="findPermissionAndRole"   resultMap="testResult"  parameterType="java.lang.Integer" >

       SELECT 
          p.id,
          p.`name`

         FROM 
         ope_role_permission rp
         LEFT JOIN
         ope_permission p
         ON rp.`permission_id`=p.`id`
         LEFT JOIN  
         (SELECT pid,COUNT(1) cnum FROM  ope_permission p GROUP BY pid) c
         ON p.id=c.pid
          WHERE 
          rp.`role_id`=#{rid}
              and (c.cnum=0 OR c.cnum IS NULL)


</select>

<select  id="getPermissionByUser" resultMap="testResult"  parameterType="java.lang.Integer">

SELECT  p.* FROM  ope_user u LEFT JOIN
           ope_user_role ur ON u.id=ur.user_id
          LEFT JOIN ope_role r ON ur.role_id=r.id
          LEFT  JOIN  ope_role_permission rp ON r.id=rp.role_id
          LEFT JOIN  ope_permission  p ON rp.permission_id=p.id
          WHERE 
          u.id=#{uid}
          AND 
          p.`level`=#{level}

</select>


</mapper>